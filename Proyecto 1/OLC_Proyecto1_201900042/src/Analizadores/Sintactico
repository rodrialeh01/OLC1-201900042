package analizadores; 
import java_cup.runtime.*;
import Structures.Instrucciones.Comentarios;
import Structures.Instrucciones.Declaracion;
import Structures.Instrucciones.Instruccion;
import Structures.Instrucciones.Operacion;
import java.util.LinkedList;
import Structures.Nodo;
import Structures.Arbol;
import Structures.Produccion;


parser code 
{:
    /**
    *Arbol AST
    **/
    public LinkedList<Instruccion> AST;
    public Arbol arbol;


    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }

    public Arbol getArbol(){
        return arbol;
    }
    
    public LinkedList<Instruccion> getAST() {
        return AST;
    }
:} 

terminal String RINICIO,RFIN,RMETODO,RFINMETODO,RFUNCION,RFINFUNCION,RCONPARAMETROS,RRETORNAR,RINGRESAR,RCOMO,RCONVALOR,RSI,RENTONCES,ROSI,RDELOCONTRARIO,RFINSI,RSEGUN,RHACER,RFINSEGUN;
terminal String COMENTARIOL,COMENTARIOML,RPARA,RHASTA,RCONINCREMENTAL,RFINPARA,RMIENTRAS,RFINMIENTRAS,RREPETIR,RHASTAQUE,REJECUTAR,RIMPRIMIR,RIMPRIMIRNL;
terminal String IDENTIFICADOR;
terminal String ENTERO;
terminal String CARASCCI;
terminal String CADENA;
terminal String CARACTER;
terminal String DECIMAL;
terminal String SUMA,RESTA,MULTIPLICACION,DIVIDIR,MODU,POTENCIA;
terminal String RMAYOR,RMENOR,RMAYOROIGUAL,RMENOROIGUAL,RESIGUAL,RESDIFERENTE,ROR,RAND,RNOT;
terminal String RNUMERO,RCADENA,RBOOLEAN,RCARACTER;
terminal String RVERDADERO,RFALSO;
terminal String PARIZQ,PARDER,INTABRE,INTCIERRA,FLECHA,PTCOMA,COMA,CORIZQ,CORDER;

non terminal Produccion INICIO;
non terminal Produccion INSTRUCCIONES;
non terminal Produccion DECLARACION;
non terminal Produccion LISTA_IDENTIFICADORES;
non terminal Produccion DECLARACIONyASIGNACION;
non terminal Produccion ASIGNACION;
non terminal Produccion EXPRESION;
non terminal Produccion TIPODATO;
non terminal Produccion GLOBAL;
non terminal Produccion FUNCION;
non terminal Produccion METODO;
non terminal Produccion LISTA_PARAMETROS;
non terminal Produccion ENTORNO_LOCAL;
non terminal Produccion CONDICIONAL_SI;
non terminal Produccion CONDICION;
non terminal Produccion LOCAL;
non terminal Produccion LISTA_OSI;
non terminal Produccion SELECCION_MULTIPLE;
non terminal Produccion LISTA_VALORENTONCES;
non terminal Produccion CICLO_PARA;
non terminal Produccion CICLO_MIENTRAS;
non terminal Produccion CICLO_REPETIR;
non terminal Produccion EJECUTAR;
non terminal Produccion IMPRESION;
non terminal Produccion IMPRESION_CONSALTO;
non terminal Produccion ALGORITMO;
non terminal Produccion MAIN;
non terminal Produccion COMENTARIOS;
non terminal Produccion COMENTARIO;
non terminal Produccion INSERCION_PARAMETROS;
non terminal Produccion EJECUTAR_2;
non terminal Produccion RELACIONAL;

precedence left SUMA,RESTA;
precedence left MULTIPLICACION,DIVIDIR;
precedence left POTENCIA,MODU;

//-------------------------------------------GRAMATICA SINTACTICA-------------------------------------------------
start with INICIO; 

INICIO::=INSTRUCCIONES:a                                                                                {:  
                                                                                                            parser.AST=a.getInstrucciones();
                                                                                                            Nodo NODERAIZ = new Nodo("INICIO"); NODERAIZ.agregarhijo(a.getNodo());
                                                                                                            parser.arbol= new Arbol(NODERAIZ);
                                                                                                        :}                                                                               
;
INSTRUCCIONES::=MAIN:a                                                                                  {:  
                                                                                                            RESULT=new Produccion(new Nodo("Main"),new LinkedList<>());
                                                                                                            RESULT.agregarIns(a.getIns());
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}                                                                                      
               |error INSTRUCCIONES:a                                                                   {:  
                                                                                                            RESULT=new Produccion(new Nodo("Instrucciones"),a.getInstrucciones());
                                                                                                            RESULT.agregarIns(a.getIns());
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}                                                                        
; 

MAIN::=RINICIO ALGORITMO:a RFIN                                                                         {:  
                                                                                                            RESULT=new Produccion(new Nodo("Algoritmo"),new LinkedList<>());
                                                                                                            RESULT.agregarHijo("INICIO");
                                                                                                            RESULT.agregarIns(a.getIns());
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("FIN");
                                                                                                        :}
      |RINICIO RFIN                                                                                     {:  
                                                                                                            RESULT=new Produccion(new Nodo("Main"));
                                                                                                            RESULT.agregarHijo("INICIO");
                                                                                                            RESULT.agregarHijo("FIN");
                                                                                                        :}
      |RINICIO RFIN COMENTARIOS
      |RINICIO ALGORITMO RFIN COMENTARIOS 
      |COMENTARIOS RINICIO ALGORITMO RFIN
      |COMENTARIOS RINICIO RFIN
      |COMENTARIOS RINICIO ALGORITMO RFIN COMENTARIOS
      |COMENTARIOS RINICIO RFIN COMENTARIOS
;
COMENTARIOS::=COMENTARIO COMENTARIOS
             |COMENTARIO
;
COMENTARIO::=COMENTARIOL
            |COMENTARIOML
;
ALGORITMO::=ALGORITMO:a GLOBAL:b                                                                        {:  
                                                                                                            RESULT=new Produccion(new Nodo("Algoritmo"),a.getInstrucciones());
                                                                                                            RESULT.agregarIns(b.getIns());
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |GLOBAL:a                                                                                    {:  
                                                                                                            RESULT=new Produccion(new Nodo("Algoritmo"),new LinkedList<>());
                                                                                                            RESULT.agregarIns(a.getIns());
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}
;
GLOBAL::=FUNCION
        |METODO
        |ENTORNO_LOCAL:a                                                                                {:  
                                                                                                            RESULT=new Produccion(new Nodo("Global"),new LinkedList<>());
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}
;
DECLARACION::=RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RNUMERO PTCOMA                                    {:
                                                                                                            RESULT=new Produccion(new Nodo("Declaracion"), new Declaracion(Declaracion.Tipo_Variable.RNUMERO,l.getInstrucciones()));
                                                                                                            RESULT.agregarHijo("ingresar");
                                                                                                            RESULT.agregarHijo(l);
                                                                                                            RESULT.agregarHijo("como");
                                                                                                            RESULT.agregarHijo("Numero");
                                                                                                            RESULT.agregarHijo(";");
                                                                                                        :}
             |RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RCADENA PTCOMA                                    {:
                                                                                                            RESULT=new Produccion(new Nodo("Declaracion"), new Declaracion(Declaracion.Tipo_Variable.RCADENA,l.getInstrucciones()));
                                                                                                            RESULT.agregarHijo("ingresar");
                                                                                                            RESULT.agregarHijo(l);
                                                                                                            RESULT.agregarHijo("como");
                                                                                                            RESULT.agregarHijo("Cadena");
                                                                                                            RESULT.agregarHijo(";");
                                                                                                        :}
             |RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RBOOLEAN PTCOMA                                   {:
                                                                                                            RESULT=new Produccion(new Nodo("Declaracion"), new Declaracion(Declaracion.Tipo_Variable.RBOOLEAN,l.getInstrucciones()));
                                                                                                            RESULT.agregarHijo("ingresar");
                                                                                                            RESULT.agregarHijo(l);
                                                                                                            RESULT.agregarHijo("como");
                                                                                                            RESULT.agregarHijo("Numero");
                                                                                                            RESULT.agregarHijo(";");
                                                                                                        :}
             |RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RCARACTER PTCOMA                                  {:
                                                                                                            RESULT=new Produccion(new Nodo("Declaracion"), new Declaracion(Declaracion.Tipo_Variable.RCARACTER,l.getInstrucciones()));
                                                                                                            RESULT.agregarHijo("ingresar");
                                                                                                            RESULT.agregarHijo(l);
                                                                                                            RESULT.agregarHijo("como");
                                                                                                            RESULT.agregarHijo("Caracter");
                                                                                                            RESULT.agregarHijo(";");
                                                                                                        :}
             |DECLARACIONyASIGNACION
;
LISTA_IDENTIFICADORES::=LISTA_IDENTIFICADORES:l COMA IDENTIFICADOR:a                                    {:
                                                                                                            RESULT=new Produccion(new Nodo("Lista_Identificadores"), l.getInstrucciones());
                                                                                                            RESULT.agregarIns(new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR));
                                                                                                            RESULT.agregarHijo(l);
                                                                                                            RESULT.agregarHijo(",");
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}
                       |IDENTIFICADOR:a                                                                 {:
                                                                                                            RESULT=new Produccion(new Nodo("Lista_Identificadores"), new LinkedList<>());
                                                                                                            RESULT.agregarIns(new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}
;
DECLARACIONyASIGNACION::=RINGRESAR LISTA_IDENTIFICADORES RCOMO TIPODATO RCONVALOR EXPRESION PTCOMA;
EXPRESION::=ENTERO:a                                                                                    {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.NUMERO));
                                                                                                        :}
            |DECIMAL:a                                                                                  {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.DECIMAL));
                                                                                                        :}    
            |CADENA:a                                                                                   {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.CADENA));   
                                                                                                        :}
            |CARACTER:a                                                                                 {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.CARACTER));   
                                                                                                        :}
            |CARASCCI:a                                                                                 {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.ASCCI));   
                                                                                                        :}
            |RVERDADERO:a                                                                               {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.VERDADERO));  
                                                                                                        :}
            |RFALSO:a                                                                                   {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.FALSO));  
                                                                                                        :}
            |IDENTIFICADOR:a                                                                            {:
                                                                                                            RESULT=new Produccion(new Nodo(null, a), new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR));  
                                                                                                        :}
            |RESTA EXPRESION:a                                                                          {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),Operacion.Tipo_operacion.NEGATIVO));
                                                                                                            RESULT.agregarHijo("-");
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}
            |PARIZQ EXPRESION:a PARDER                                                                  {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),Operacion.Tipo_operacion.AGRUPACION));
                                                                                                            RESULT.agregarHijo("(");
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo(")");
                                                                                                        :}
            |EXPRESION:a SUMA EXPRESION:b                                                               {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.SUMA));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("+");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
            |EXPRESION:a RESTA EXPRESION:b                                                              {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.RESTA));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("-");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
            |EXPRESION:a MULTIPLICACION EXPRESION:b                                                     {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MULTIPLICACION));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("*");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
            |EXPRESION:a DIVIDIR EXPRESION:b                                                            {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.DIVISION));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("/");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
            |EXPRESION:a POTENCIA CORIZQ EXPRESION:b CORDER                                             {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.POTENCIA));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("potencia");
                                                                                                            RESULT.agregarHijo("[");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                            RESULT.agregarHijo("]");
                                                                                                        :}
            |EXPRESION:a MODU EXPRESION:b                                                               {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MODULAR));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("modular");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}                                                                                          
;
TIPODATO::=RNUMERO
          |RCARACTER
          |RBOOLEAN
          |RCADENA
;
ASIGNACION::=LISTA_IDENTIFICADORES FLECHA EXPRESION PTCOMA;
FUNCION::=RFUNCION IDENTIFICADOR TIPODATO LOCAL RRETORNAR CONDICION PTCOMA RFINFUNCION
         |RFUNCION IDENTIFICADOR TIPODATO RRETORNAR CONDICION PTCOMA RFINFUNCION
         |RFUNCION IDENTIFICADOR TIPODATO RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER LOCAL RRETORNAR CONDICION PTCOMA RFINFUNCION
         |RFUNCION IDENTIFICADOR TIPODATO RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER RRETORNAR CONDICION PTCOMA RFINFUNCION
;
METODO::=RMETODO IDENTIFICADOR LOCAL RFINMETODO
        |RMETODO IDENTIFICADOR RFINMETODO
        |RMETODO IDENTIFICADOR RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER LOCAL RFINMETODO
        |RMETODO IDENTIFICADOR RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER RFINMETODO
;
LISTA_PARAMETROS::=LISTA_PARAMETROS COMA IDENTIFICADOR TIPODATO
                  |IDENTIFICADOR TIPODATO
;
LOCAL::=LOCAL ENTORNO_LOCAL
       |ENTORNO_LOCAL
;
ENTORNO_LOCAL::=ASIGNACION
               |DECLARACION:a                                                                           {:  
                                                                                                            RESULT=new Produccion(new Nodo("Declaracion"));
                                                                                                        :}
               |CONDICIONAL_SI
               |SELECCION_MULTIPLE
               |CICLO_PARA
               |CICLO_MIENTRAS
               |CICLO_REPETIR
               |EJECUTAR
               |IMPRESION
               |IMPRESION_CONSALTO
               |COMENTARIOL
               |COMENTARIOML
;
CONDICIONAL_SI::=RSI CONDICION RENTONCES LOCAL RFINSI
                |RSI CONDICION LISTA_OSI RFINSI
                |RSI CONDICION LISTA_OSI RDELOCONTRARIO LOCAL RFINSI
                |RSI CONDICION LOCAL RDELOCONTRARIO LOCAL RFINSI
;
RELACIONAL::=EXPRESION
           |EXPRESION:a RMAYOR EXPRESION:b                                                              {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MAYORQUE));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("mayor");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |EXPRESION:a RMENOR EXPRESION:b                                                              {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MAYORQUE));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("menor");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |EXPRESION:a RMAYOROIGUAL EXPRESION:b                                                        {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MAYOROIGUAL));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("mayor_o_igual");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |EXPRESION:a RMENOROIGUAL EXPRESION:b                                                        {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.MENOROIGUAL));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("menor_o_igual");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |EXPRESION:a RESIGUAL EXPRESION:b                                                            {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.IGUAL));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("es_igual");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |EXPRESION:a RESDIFERENTE EXPRESION:b                                                        {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Relacional"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.DIFERENTE));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("es_diferente");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
;
CONDICION::=RELACIONAL:a ROR RELACIONAL:b                                                               {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Logica"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.OR));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("or");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |RELACIONAL:a RAND RELACIONAL:b                                                              {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Logica"), new Operacion((Operacion)a.getIns(),(Operacion)b.getIns(),Operacion.Tipo_operacion.AND));
                                                                                                            RESULT.agregarHijo(a);
                                                                                                            RESULT.agregarHijo("and");
                                                                                                            RESULT.agregarHijo(b);
                                                                                                        :}
           |RNOT RELACIONAL:a                                                                           {:
                                                                                                            RESULT=new Produccion(new Nodo("Expresion_Logica"), new Operacion((Operacion)a.getIns(),Operacion.Tipo_operacion.NOT));
                                                                                                            RESULT.agregarHijo("not");
                                                                                                            RESULT.agregarHijo(a);
                                                                                                        :}
           |RELACIONAL
;
LISTA_OSI::=LISTA_OSI ROSI CONDICION RENTONCES LOCAL
            |LOCAL ROSI CONDICION RENTONCES LOCAL
;
SELECCION_MULTIPLE::=RSEGUN EXPRESION RHACER LISTA_VALORENTONCES RFINSEGUN
                    |RSEGUN EXPRESION RHACER LISTA_VALORENTONCES RDELOCONTRARIO RENTONCES LOCAL RFINSEGUN
;
LISTA_VALORENTONCES::=LISTA_VALORENTONCES INTABRE EXPRESION INTCIERRA RENTONCES LOCAL
                     |INTABRE EXPRESION INTCIERRA RENTONCES LOCAL
;
CICLO_PARA::=RPARA IDENTIFICADOR FLECHA EXPRESION RHASTA EXPRESION RHACER LOCAL RFINPARA
            |RPARA IDENTIFICADOR FLECHA EXPRESION RHASTA EXPRESION RHACER RFINPARA
            |RPARA IDENTIFICADOR FLECHA EXPRESION RHASTA EXPRESION RCONINCREMENTAL EXPRESION RHACER LOCAL RFINPARA
            |RPARA IDENTIFICADOR FLECHA EXPRESION RHASTA EXPRESION RCONINCREMENTAL EXPRESION RHACER RFINPARA
;
CICLO_MIENTRAS::=RMIENTRAS CONDICION RHACER LOCAL RFINMIENTRAS
                |RMIENTRAS CONDICION RHACER RFINMIENTRAS
;
CICLO_REPETIR::=RREPETIR LOCAL RHASTAQUE CONDICION
               |RREPETIR RHASTAQUE CONDICION
;
EJECUTAR::=REJECUTAR IDENTIFICADOR PARIZQ PARDER PTCOMA
           |REJECUTAR IDENTIFICADOR PARIZQ INSERCION_PARAMETROS PARDER PTCOMA
;
EJECUTAR_2::=REJECUTAR IDENTIFICADOR PARIZQ PARDER
            |REJECUTAR IDENTIFICADOR PARIZQ INSERCION_PARAMETROS PARDER
;
INSERCION_PARAMETROS::=INSERCION_PARAMETROS COMA EXPRESION
                      |EXPRESION
;

IMPRESION::=RIMPRIMIR EXPRESION PTCOMA;
IMPRESION_CONSALTO::= RIMPRIMIRNL EXPRESION PTCOMA;