package analizadores; 
import Clases.ErrorLenguaje;
import java_cup.runtime.*;
import Structures.Instrucciones.Comentarios;
import Structures.Instrucciones.Declaracion;
import Structures.Instrucciones.Instruccion;
import Structures.Instrucciones.Operacion;
import Structures.Instrucciones.Si;
import Structures.Instrucciones.Main;
import Structures.Instrucciones.Asignacion;
import Structures.Instrucciones.Case;
import Structures.Instrucciones.SeleccionMultiple;
import Structures.Instrucciones.Para;
import Structures.Instrucciones.Mientras;
import Structures.Instrucciones.Repetir;
import java.util.LinkedList;
import Structures.Nodo;
import Structures.Arbol;
import Structures.Produccion;


parser code 
{:
    /**
    *Listas
    **/
    public LinkedList<ErrorLenguaje> ErroresSintacticos = new LinkedList<ErrorLenguaje>();
    public LinkedList<Instruccion> Golang = new LinkedList<Instruccion>();
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){
        
        ErroresSintacticos.add(new ErrorLenguaje("Sintáctico","Carácter no esperado: "+s.value.toString(),s.right,s.left));

        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        ErroresSintacticos.add(new ErrorLenguaje("Sintáctico","Carácter no esperado: "+s.value.toString(),s.right,s.left));
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }
:} 

terminal String RINICIO,RFIN,RMETODO,RFINMETODO,RFUNCION,RFINFUNCION,RCONPARAMETROS,RRETORNAR,RINGRESAR,RCOMO,RCONVALOR,RSI,RENTONCES,ROSI,RDELOCONTRARIO,RFINSI,RSEGUN,RHACER,RFINSEGUN;
terminal String COMENTARIOL,COMENTARIOML,RPARA,RHASTA,RCONINCREMENTAL,RFINPARA,RMIENTRAS,RFINMIENTRAS,RREPETIR,RHASTAQUE,REJECUTAR,RIMPRIMIR,RIMPRIMIRNL;
terminal String IDENTIFICADOR;
terminal String ENTERO;
terminal String CARASCCI;
terminal String CADENA;
terminal String CARACTER;
terminal String DECIMAL;
terminal String SUMA,RESTA,MULTIPLICACION,DIVIDIR,MODU,POTENCIA;
terminal String RMAYOR,RMENOR,RMAYOROIGUAL,RMENOROIGUAL,RESIGUAL,RESDIFERENTE,ROR,RAND,RNOT;
terminal String RNUMERO,RCADENA,RBOOLEAN,RCARACTER;
terminal String RVERDADERO,RFALSO;
terminal String PARIZQ,PARDER,INTABRE,INTCIERRA,FLECHA,PTCOMA,COMA,CORIZQ,CORDER;

non terminal INICIO;
non terminal INSTRUCCIONES;
non terminal DECLARACION;
non terminal LinkedList<Instruccion> LISTA_IDENTIFICADORES;
non terminal ASIGNACION;
non terminal EXPRESION;
non terminal TIPODATO;
non terminal GLOBAL;
non terminal FUNCION;
non terminal METODO;
non terminal LISTA_PARAMETROS;
non terminal ENTORNO_LOCAL;
non terminal CONDICIONAL_SI;
non terminal CONDICION;
non terminal LinkedList<Instruccion> LOCAL;
non terminal LinkedList<Si> LISTA_OSI;
non terminal SELECCION_MULTIPLE;
non terminal LinkedList<Instruccion> LISTA_VALORENTONCES;
non terminal CICLO_PARA;
non terminal CICLO_MIENTRAS;
non terminal CICLO_REPETIR;
non terminal EJECUTAR;
non terminal IMPRESION;
non terminal IMPRESION_CONSALTO;
non terminal ALGORITMO;
non terminal MAIN;
non terminal COMENTARIOS;
non terminal COMENTARIO;
non terminal INSERCION_PARAMETROS;
non terminal EJECUTAR_2;
non terminal RELACIONAL;

precedence left SUMA,RESTA;
precedence left MULTIPLICACION,DIVIDIR;
precedence left POTENCIA,MODU;

//-------------------------------------------GRAMATICA SINTACTICA-------------------------------------------------
start with INICIO; 

INICIO::=INSTRUCCIONES                                                                                                                                                             
;
INSTRUCCIONES::=MAIN                                                                                  
               |COMENTARIOS                                                                           
               |error
;
MAIN::=RINICIO ALGORITMO RFIN                                                                         
      |RINICIO RFIN
;
COMENTARIOS::=COMENTARIOS COMENTARIO
             |COMENTARIO
;
COMENTARIO::=COMENTARIOL:a                                                                              {:  
                                                                                                            RESULT=new Comentarios(Comentarios.Tipo_Comentario.COMENTARIO_UNILINEA, a);
                                                                                                            Golang.add((Comentarios) RESULT);
                                                                                                        :}
            |COMENTARIOML:a                                                                             {:  
                                                                                                            RESULT=new Comentarios(Comentarios.Tipo_Comentario.COMENTARIO_MILTILINEA, a);
                                                                                                            Golang.add((Comentarios) RESULT);
                                                                                                        :}
;
ALGORITMO::=ALGORITMO GLOBAL
           |GLOBAL
;
GLOBAL::=FUNCION
        |METODO
        |ENTORNO_LOCAL:a                                                                                {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                            Golang.add((Instruccion) RESULT);
                                                                                                        :}
;
DECLARACION::=RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RNUMERO RCONVALOR EXPRESION:e PTCOMA              {:  
                                                                                                            RESULT=new Declaracion(Declaracion.Tipo_Variable.RNUMERO,(Operacion)e,(LinkedList)l);
                                                                                                        :}                                    
             |RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RCADENA RCONVALOR EXPRESION:e PTCOMA              {:  
                                                                                                            RESULT=new Declaracion(Declaracion.Tipo_Variable.RCADENA,(Operacion)e,(LinkedList)l);
                                                                                                        :}  
             |RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RBOOLEAN RCONVALOR EXPRESION:e PTCOMA             {:  
                                                                                                            RESULT=new Declaracion(Declaracion.Tipo_Variable.RBOOLEAN,(Operacion)e,(LinkedList)l);
                                                                                                        :}  
             |RINGRESAR LISTA_IDENTIFICADORES:l RCOMO RCARACTER RCONVALOR EXPRESION:e PTCOMA            {:  
                                                                                                            RESULT=new Declaracion(Declaracion.Tipo_Variable.RCARACTER,(Operacion)e,(LinkedList)l);
                                                                                                        :} 
;
LISTA_IDENTIFICADORES::=LISTA_IDENTIFICADORES:a COMA IDENTIFICADOR:b                                    {:  
                                                                                                            RESULT = new LinkedList<>();
                                                                                                            for (int i = 0; i < a.size(); i++) {
                                                                                                                RESULT.add(a.get(i));
                                                                                                            }
                                                                                                            RESULT.add(new Operacion(b,Operacion.Tipo_operacion.IDENTIFICADOR));
                                                                                                        :} 
                       |IDENTIFICADOR:a                                                                 {:  
                                                                                                            RESULT= new LinkedList<Instruccion>();
                                                                                                            RESULT.add(new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR));
                                                                                                        :}
;
EXPRESION::=ENTERO:a                                                                                    {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.NUMERO);
                                                                                                        :}
            |DECIMAL:a                                                                                  {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.DECIMAL);
                                                                                                        :}
            |CADENA:a                                                                                   {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.CADENA);
                                                                                                        :}
            |CARACTER:a                                                                                 {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.CARACTER);
                                                                                                        :}
            |CARASCCI:a                                                                                 {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.ASCCI);
                                                                                                        :}
            |RVERDADERO:a                                                                               {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.VERDADERO);
                                                                                                        :}
            |RFALSO:a                                                                                   {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.FALSO);
                                                                                                        :}
            |IDENTIFICADOR:a                                                                            {:  
                                                                                                            RESULT=new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR);
                                                                                                        :}
            |RESTA EXPRESION:a                                                                          {:  
                                                                                                            RESULT=new Operacion((Operacion)a,Operacion.Tipo_operacion.NEGATIVO);
                                                                                                        :}
            |PARIZQ EXPRESION:a PARDER                                                                  {:  
                                                                                                            RESULT=new Operacion((Operacion)a,Operacion.Tipo_operacion.AGRUPACION);
                                                                                                        :} 
            |EXPRESION:a SUMA EXPRESION:b                                                               {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.SUMA);
                                                                                                        :} 
            |EXPRESION:a RESTA EXPRESION:b                                                              {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.RESTA);
                                                                                                        :} 
            |EXPRESION:a MULTIPLICACION EXPRESION:b                                                     {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.MULTIPLICACION);
                                                                                                        :} 
            |EXPRESION:a DIVIDIR EXPRESION:b                                                            {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.DIVISION);
                                                                                                        :}        
            |EXPRESION:a POTENCIA CORIZQ EXPRESION:b CORDER                                             {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.POTENCIA);
                                                                                                        :} 
            |EXPRESION:a MODU EXPRESION:b                                                               {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.MODULAR);
                                                                                                        :}                                                                   
;
RELACIONAL::=EXPRESION:a                                                                                {:  
                                                                                                            RESULT=(Operacion) a;
                                                                                                        :}
           |EXPRESION:a RMAYOR EXPRESION:b                                                              {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.MAYORQUE);;
                                                                                                        :}
           |EXPRESION:a RMENOR EXPRESION:b                                                              {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.MENORQUE);;
                                                                                                        :}
           |EXPRESION:a RMAYOROIGUAL EXPRESION:b                                                        {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.MAYOROIGUAL);;
                                                                                                        :}
           |EXPRESION:a RMENOROIGUAL EXPRESION:b                                                        {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.MENOROIGUAL);;
                                                                                                        :}
           |EXPRESION:a RESIGUAL EXPRESION:b                                                            {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.IGUAL);;
                                                                                                        :}
           |EXPRESION:a RESDIFERENTE EXPRESION:b                                                        {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.DIFERENTE);;
                                                                                                        :}
;
CONDICION::=RELACIONAL:a ROR RELACIONAL:b                                                               {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.OR);;
                                                                                                        :}
           |RELACIONAL:a RAND RELACIONAL:b                                                              {:  
                                                                                                            RESULT=new Operacion((Operacion)a,(Operacion)b,Operacion.Tipo_operacion.AND);;
                                                                                                        :}
           |RNOT RELACIONAL:a                                                                           {:  
                                                                                                            RESULT=new Operacion((Operacion)a,Operacion.Tipo_operacion.MENOROIGUAL);;
                                                                                                        :}
           |RELACIONAL:a                                                                                {:  
                                                                                                            RESULT=(Operacion)a;
                                                                                                        :} 
;
ASIGNACION::=LISTA_IDENTIFICADORES:l FLECHA EXPRESION:e PTCOMA                                          {:  
                                                                                                            RESULT=new Asignacion((Operacion)e,(LinkedList)l);
                                                                                                        :}
;
FUNCION::=RFUNCION IDENTIFICADOR TIPODATO LOCAL RRETORNAR CONDICION PTCOMA RFINFUNCION
         |RFUNCION IDENTIFICADOR TIPODATO RRETORNAR CONDICION PTCOMA RFINFUNCION
         |RFUNCION IDENTIFICADOR TIPODATO RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER LOCAL RRETORNAR CONDICION PTCOMA RFINFUNCION
         |RFUNCION IDENTIFICADOR TIPODATO RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER RRETORNAR CONDICION PTCOMA RFINFUNCION
;
METODO::=RMETODO IDENTIFICADOR LOCAL RFINMETODO
        |RMETODO IDENTIFICADOR RFINMETODO
        |RMETODO IDENTIFICADOR RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER LOCAL RFINMETODO
        |RMETODO IDENTIFICADOR RCONPARAMETROS PARIZQ LISTA_PARAMETROS PARDER RFINMETODO
;
LISTA_PARAMETROS::=LISTA_PARAMETROS COMA IDENTIFICADOR TIPODATO
                  |IDENTIFICADOR TIPODATO
;
TIPODATO::=RNUMERO
          |RCADENA
          |RBOOLEAN
          |RCARACTER
;
LOCAL::=LOCAL:a ENTORNO_LOCAL:b                                                                         {:  
                                                                                                            RESULT = new LinkedList<>();
                                                                                                            for (int i = 0; i < a.size(); i++) {
                                                                                                                RESULT.add(a.get(i));
                                                                                                            }
                                                                                                            RESULT.add((Instruccion) b);
                                                                                                        :}  
       |ENTORNO_LOCAL:a                                                                                 {:  
                                                                                                            RESULT= new LinkedList<Instruccion>();
                                                                                                            RESULT.add((Instruccion) a);
                                                                                                        :} 
;
ENTORNO_LOCAL::=ASIGNACION:a                                                                            {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                        :}
               |DECLARACION:a                                                                           {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                        :}
               |CONDICIONAL_SI:a                                                                        {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                        :}
               |SELECCION_MULTIPLE:a                                                                    {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                        :} 
               |CICLO_PARA:a                                                                            {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                        :}
               |CICLO_MIENTRAS:a                                                                        {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                        :}
               |CICLO_REPETIR:a                                                                         {:  
                                                                                                            RESULT= (Instruccion) a;
                                                                                                        :}
               |EJECUTAR
               |IMPRESION
               |IMPRESION_CONSALTO
               |COMENTARIOL
               |COMENTARIOML
;
CONDICIONAL_SI::=RSI CONDICION:a RENTONCES LOCAL:b RFINSI                                               {:  
                                                                                                            RESULT= new Si((Operacion) a, (LinkedList) b);
                                                                                                        :}                                
                |RSI CONDICION:a LOCAL:b LISTA_OSI:l RFINSI                                             {:  
                                                                                                            RESULT= new Si((LinkedList) b,(Operacion) a, (LinkedList) l);
                                                                                                        :}     
                |RSI CONDICION:a LOCAL:b LISTA_OSI:l RDELOCONTRARIO LOCAL:c RFINSI                      {:  
                                                                                                            RESULT= new Si((Operacion) a,(LinkedList) b, (LinkedList) l, (LinkedList) c);
                                                                                                        :}
                |RSI CONDICION:a LOCAL:b RDELOCONTRARIO LOCAL:c RFINSI                                  {:  
                                                                                                            RESULT= new Si((Operacion) a,(LinkedList) b, (LinkedList) c);
                                                                                                        :}
;
LISTA_OSI::=LISTA_OSI:l ROSI CONDICION:c RENTONCES LOCAL:d                                              {:  
                                                                                                            RESULT = new LinkedList<>();
                                                                                                            for (int i = 0; i < l.size(); i++) {
                                                                                                                RESULT.add(l.get(i));
                                                                                                            }
                                                                                                            RESULT.add(new Si((Operacion) c, (LinkedList) d));
                                                                                                        :} 
            |ROSI CONDICION:e RENTONCES LOCAL:f                                                         {:  
                                                                                                            RESULT= new LinkedList<Si>();
                                                                                                            RESULT.add(new Si((Operacion) e, (LinkedList) f));
                                                                                                        :}
;
SELECCION_MULTIPLE::=RSEGUN EXPRESION:a RHACER LISTA_VALORENTONCES:l RFINSEGUN                          {:  
                                                                                                            RESULT= new SeleccionMultiple((Operacion)a, (LinkedList) l);
                                                                                                        :}
                    |RSEGUN EXPRESION:a RHACER LISTA_VALORENTONCES:l RDELOCONTRARIO RENTONCES LOCAL:b RFINSEGUN{:  
                                                                                                            RESULT = new SeleccionMultiple((Operacion)a, (LinkedList)l, (LinkedList) b);
                                                                                                        :} 
;
LISTA_VALORENTONCES::=LISTA_VALORENTONCES:l INTABRE EXPRESION:e INTCIERRA RENTONCES LOCAL:a             {:  
                                                                                                            RESULT= new LinkedList<>();
                                                                                                            for (int i = 0; i < l.size(); i++) {
                                                                                                                RESULT.add(l.get(i));
                                                                                                            }
                                                                                                            RESULT.add(new Case((Operacion) e, (LinkedList) a));
                                                                                                        :}
                     |INTABRE EXPRESION:e INTCIERRA RENTONCES LOCAL:a                                   {:  
                                                                                                            RESULT= new LinkedList<>();
                                                                                                            RESULT.add(new Case((Operacion) e, (LinkedList) a));
                                                                                                        :}
;
CICLO_PARA::=RPARA IDENTIFICADOR:a FLECHA EXPRESION:b RHASTA EXPRESION:c RHACER LOCAL:d RFINPARA        {:  
                                                                                                            RESULT= new Para(new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR), (Operacion) b, (Operacion) c, (LinkedList) d);
                                                                                                        :}
            |RPARA IDENTIFICADOR:a FLECHA EXPRESION:b RHASTA EXPRESION:c RHACER RFINPARA                {:  
                                                                                                            RESULT= new Para(new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR), (Operacion) b, (Operacion) c);
                                                                                                        :}
            |RPARA IDENTIFICADOR:a FLECHA EXPRESION:b RHASTA EXPRESION:c RCONINCREMENTAL EXPRESION:d RHACER LOCAL:e RFINPARA {:  
                                                                                                            RESULT= new Para(new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR), (Operacion) b, (Operacion) c, (Operacion) d,(LinkedList) e);
                                                                                                        :}
            |RPARA IDENTIFICADOR:a FLECHA EXPRESION:b RHASTA EXPRESION:c RCONINCREMENTAL EXPRESION:d RHACER RFINPARA {:  
                                                                                                            RESULT= new Para(new Operacion(a,Operacion.Tipo_operacion.IDENTIFICADOR), (Operacion) b, (Operacion) c, (Operacion) d);
                                                                                                        :}
;
CICLO_MIENTRAS::=RMIENTRAS CONDICION:a RHACER LOCAL:b RFINMIENTRAS                                      {:  
                                                                                                            RESULT= new Mientras((Operacion) a,(LinkedList) b);
                                                                                                        :}
                |RMIENTRAS CONDICION:a RHACER RFINMIENTRAS                                              {:  
                                                                                                            RESULT= new Mientras((Operacion) a);
                                                                                                        :}
;
CICLO_REPETIR::=RREPETIR LOCAL:a RHASTAQUE CONDICION:b                                                  {:  
                                                                                                            RESULT= new Repetir((Operacion) b,(LinkedList) a);
                                                                                                        :}
               |RREPETIR RHASTAQUE CONDICION:a                                                          {:  
                                                                                                            RESULT= new Repetir((Operacion) a);
                                                                                                        :}
;
EJECUTAR::=REJECUTAR IDENTIFICADOR PARIZQ PARDER PTCOMA
           |REJECUTAR IDENTIFICADOR PARIZQ INSERCION_PARAMETROS PARDER PTCOMA
;
EJECUTAR_2::=REJECUTAR IDENTIFICADOR PARIZQ PARDER
            |REJECUTAR IDENTIFICADOR PARIZQ INSERCION_PARAMETROS PARDER
;
INSERCION_PARAMETROS::=INSERCION_PARAMETROS COMA EXPRESION
                      |EXPRESION
;
IMPRESION::=RIMPRIMIR EXPRESION PTCOMA;
IMPRESION_CONSALTO::= RIMPRIMIRNL EXPRESION PTCOMA;